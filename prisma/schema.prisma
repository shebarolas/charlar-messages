generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    password      String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @default(now())

    conversationsId String[]       @db.ObjectId
    conversations   Conversation[] @relation(fields: [conversationsId], references: [id])

    seenMessagesId String[]   @db.ObjectId
    seenMessages   Messages[] @relation("Seen", fields: [seenMessagesId], references: [id])
    
    accounts Account[]
    messages Messages[]
}

model Conversation {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    lastMessage DateTime @default(now())
    name String?
    isGropu Boolean?

    messagesId String[] @db.ObjectId
    messages Messages[]

    userId String[] @db.ObjectId
    users User[] @relation(fields: [userId], references: [id])

}

model Messages {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    body String?
    image String?
    createdAt DateTime @default(now())

    seenId String[] @db.ObjectId
    seen User[] @relation("Seen", fields: [seenId], references: [id])

    conversationId String @db.ObjectId
    conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

    senderId String @db.ObjectId
    sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
    
    
}

model Account {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token      String? @db.String
    access_token       String? @db.String
    expires_at        Int?
    token_type         String?
    scope             String?
    id_token           String? @db.String
    session_state      String?
    //Relaciones
    userId            String  @db.ObjectId
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@unique([provider, providerAccountId])
}
